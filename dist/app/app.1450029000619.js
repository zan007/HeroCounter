angular.module("heroCounter",["ui.router","ngAnimate","register","login","heroes","titans","settings","eventHeroes","eventTitans","dataSource","ngTouch","ngEnter","timer","userAuthService","socketService","notification-service","utils.fastFilter"]).config(["$httpProvider","$stateProvider","$urlRouterProvider",function($httpProvider,$stateProvider,$urlRouterProvider){$httpProvider.interceptors.push(function($q,$location){return{response:function(response){return console.log("sukces"),response},responseError:function(response){return console.log("error"),401===response.status&&(console.log("401"),$location.url("/login")),$q.reject(response)}}}),$urlRouterProvider.otherwise(function(){return"/heroes"}),$stateProvider.state("heroes",{url:"/heroes",templateUrl:"/heroes",authRequire:!0}).state("eventHeroes",{url:"/event-heroes",templateUrl:"/event-heroes",authRequire:!0}).state("titans",{url:"/titans",templateUrl:"/titans",authRequire:!0}).state("eventTitans",{url:"/event-titans",templateUrl:"/event-titans",authRequire:!0}).state("login",{url:"/login",templateUrl:"/",authRequire:!1}).state("register",{url:"/register",templateUrl:"/register",authRequire:!1}).state("settings",{url:"/settings",templateUrl:"/settings",authRequire:!1})}]).run(function($rootScope,userAuthService,$state){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState){if(void 0!==userAuthService.getIsLogged())if(!userAuthService.getIsLogged()||"register"!==toState.name&&"login"!==toState.name){var isAuthenticationRequired=toState.authRequire&&!userAuthService.getIsLogged();isAuthenticationRequired&&(event.preventDefault(),$state.go("login"))}else event.preventDefault(),$state.go(fromState)})}).constant("appStates",{"true":[{reference:"heroes",selected:!0,name:"HEROES"},{reference:"settings",selected:!1,name:"SETTINGS"}],"false":[{reference:"login",selected:!0,name:"LOGIN"},{reference:"register",selected:!1,name:"REGISTER"}]}).controller("AppCtrl",["$rootScope","$scope","dataSource","userAuthService","$state","appStates","socketService","notificationService",function($rootScope,$scope,dataSource,userAuthService,$state,appStates,socketService,notificationService){userAuthService.init(),$rootScope.showLogout=!1,$rootScope.$on("app-ready",function(){$rootScope.states=appStates[userAuthService.getIsLogged()],userAuthService.getIsLogged()&&($rootScope.showLogout=!0,dataSource.init(),socketService.initializeConnection()),$state.reload(!0)}),$rootScope.$on("auth-login-success",function(){dataSource.init(),socketService.initializeConnection(),$rootScope.showLogout=!0}),$scope.btnClick=!1,$scope.logout=function(){userAuthService.logout().then(function(){$rootScope.states=appStates[userAuthService.getIsLogged()],$rootScope.model={},socketService.disconnect(),$state.go($rootScope.states[0].reference)})},$rootScope.$on("dataSource.ready",function(){$scope.personalData=$rootScope.model.personalData}),socketService.on("creaturesUpdated",function(data){console.log("zupdatowana lista ",data),$rootScope.model.creatures=data.creatures,notificationService.showInfoNotification("Creatures list updated"),$rootScope.$broadcast("dataSource.ready")})}]),angular.module("appAnimations",[]).animation(".list-out",["$window",function($window){return{start:function(element,done){TweenMax.set(element,{position:"relative"});var duration=1;TweenMax.to(element,1,{opacity:0,width:0}),$window.setTimeout(done,1e3*duration)}}}]).animation(".list-in",["$window",function($window){return{setup:function(element){TweenMax.set(element,{opacity:0,width:0})},start:function(element,done){var duration=1;TweenMax.to(element,duration,{opacity:1,width:210}),$window.setTimeout(done,1e3*duration)}}}]).animation(".list-move",["$window",function($window){return{start:function(element,done){var duration=1;TweenMax.to(element,duration,{opacity:1,width:210}),$window.setTimeout(done,1e3*duration)}}}]),angular.module("controls.hcCreatureTile",["dataSource"]).directive("hcCreatureTile",["dataSource",function(dataSource){return{scope:{creature:"=hcCreatureTile"},replace:!0,restriction:"E",link:function($scope){$scope.startCountdown=function(creature){dataSource.defeatCreature(creature)},$scope.$watch("creature",function(){})},templateUrl:"hc-creature-tile"}}]),angular.module("ngEnter",[]).directive("ngEnter",function(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter)}),event.preventDefault())})}}),angular.module("dataSource",[]).factory("dataSource",["$http","$q","$rootScope","$location","socketService",function($http,$q,$rootScope){var initModel=function(){$rootScope.model={creatures:[],personalData:{}}};initModel(),$rootScope.opened=!1;var call=function(httpData,responseFn){$rootScope.$broadcast("dataSource.start");var promise=$http(httpData).then(function(response){var result;return responseFn&&(result=responseFn(response.data,response.status,response.headers)),$rootScope.$broadcast("dataSource.stop"),result||response.data}).then(null,function(reason){return $rootScope.$broadcast("dataSource.error"),$q.reject(reason)});return promise};return{defeatCreature:function(creature){return call({method:"POST",url:"/defeat",data:{creatureName:creature.name}},function(data){$rootScope.model.creatures=data.creatures,$rootScope.$broadcast("dataSource.ready")})},init:function(){$http.get("init").then(function(response){var data=response.data;$rootScope.model.creatures=data.creatures,$rootScope.model.personalData=data.personalData,$rootScope.$broadcast("dataSource.ready")}).then(null,function(){$rootScope.$broadcast("dataSource.error")})},register:function(registerData){return call({method:"POST",url:"/signup",data:{login:registerData.login,password:registerData.password,name:registerData.name,margoNick:registerData.margoNick}},function(){})},logg:function(credential){return call({method:"POST",url:"/login",data:{login:credential.login,password:credential.password}},function(){})},isLoggedIn:function(){var deferred=$q.defer();return $http.get("/isLoggedIn").success(function(user){user?deferred.resolve(user):deferred.reject()}),deferred.promise},logout:function(){return call({method:"GET",url:"/logout",data:{}},function(){initModel(),$rootScope.$broadcast("dataSource.ready")})}}}]),angular.module("creatureLvlFilter",[]).filter("creatureLvlFilter",function(){return function(input,lvlRange){if(!input)return input;for(var output=[],from=lvlRange.minValue,to=lvlRange.maxValue,i=0;i<input.length;i++)currentItem=input[i],currentItem.lvl>=from&&currentItem.lvl<=to&&output.push(input[i]);return output}}),angular.module("creatureTypeFilter",[]).filter("creatureTypeFilter",function(){return function(input,type){if(!input)return input;for(var output=[],i=0;i<input.length;i++)currentItem=input[i],"titan"!==currentItem.type&&"event-titan"!==currentItem.type||!type.titan||output.push(input[i]),"hero"!==currentItem.type&&"event-hero"!==currentItem.type||!type.hero||output.push(input[i]);return output}}),angular.module("filters.creaturesFilter",["creatureTypeFilter","creatureLvlFilter","respTimeFilter","utils.fastFilter","creaturesQueryFilter","onlyWithKnownTimeFilter"]).factory("creaturesFilter",["$rootScope","fastFilter",function($rootScope,fastFilter){return fastFilter.create("onlyWithKnownTimeFilter:onlyWithKnownTime | creatureTypeFilter:creatureType | creatureLvlFilter:lvlRange | creaturesQueryFilter:queryInput | respTimeFilter:hoursToResp",{creatureType:{titan:!0,hero:!0},lvlRange:{minValue:20,maxValue:320},hoursToResp:2,onlyWithKnownTime:!0})}]),angular.module("creaturesQueryFilter",[]).constant("localLetters",{"ą":"a","ć":"c","ę":"e","ł":"l","ń":"n","ó":"o","ś":"s","ź":"z"}).filter("creaturesQueryFilter",function(localLetters){var localLettersChain="ą|ć|ę|ł|ń|ó|ś|ź";return function(input,query){if(!input||!query)return input;for(var output=[],queryWithoutLocal=query.replace(new RegExp(localLettersChain,"gi"),function(matched){return localLetters[matched]}),i=0;i<input.length;i++)currentItem=input[i],(-1!=currentItem.name.toLowerCase().indexOf(query)||-1!=currentItem.name.toLowerCase().indexOf(queryWithoutLocal)||-1!=currentItem.name.indexOf(query)||-1!=currentItem.name.indexOf(queryWithoutLocal))&&output.push(input[i]);return output}}),angular.module("onlyWithKnownTimeFilter",[]).filter("onlyWithKnownTimeFilter",function(){return function(input,onlyWithKnownTime){if(!input)return input;for(var output=[],i=0;i<input.length;i++)currentItem=input[i],onlyWithKnownTime?currentItem.timeToResp&&output.push(input[i]):output.push(input[i]);return output}}),angular.module("respTimeFilter",[]).filter("respTimeFilter",function(){return function(input){if(!input)return input;return input}}),angular.module("notification-service",["ui-notification"]).config(function(NotificationProvider){NotificationProvider.setOptions({delay:1e4,startTop:20,startRight:10,verticalSpacing:20,horizontalSpacing:20,positionX:"left",positionY:"bottom"})}).factory("notificationService",function(Notification){return{showInfoNotification:function(message){Notification.info(message)}}}),angular.module("socketService",[]).factory("socketService",function($rootScope){var socket=new io.Socket("localhost",{port:8e3});return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})},initializeConnection:function(){socket=io.connect("http://localhost:8000")},disconnect:function(){socket.disconnect()}}}),angular.module("userAuthService",[]).constant("AUTH_EVENTS",{sessionTimeout:"auth-session-timeout",loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",notAuthenticated:"auth-not-authenticated",authenticated:"auth-authenticated"}).factory("userAuthService",["$rootScope","dataSource","$http","$q","AUTH_EVENTS",function($rootScope,dataSource,$http,$q,AUTH_EVENTS){var self=this;this.isLogged;var setLogged=function(value){self.isLogged=value},getIsLogged=function(){return self.isLogged},getUserAuthData=function(){var deferred=$q.defer();return dataSource.isLoggedIn().then(function(data){data&&data.hasOwnProperty("password")?(setLogged(!0),console.log("serwis, ",data),$rootScope.$broadcast(AUTH_EVENTS.authenticated),deferred.resolve(data)):(setLogged(!1),$rootScope.$broadcast(AUTH_EVENTS.notAuthenticated),deferred.resolve())}),deferred.promise},init=function(){getUserAuthData().then(function(){$rootScope.$broadcast("app-ready")})},loggIn=function(login,password){var credentials={login:login,password:password},deferred=$q.defer();return dataSource.logg(credentials).then(function(data){data?(console.log("service",data),setLogged(!0),$rootScope.$broadcast(AUTH_EVENTS.loginSuccess),deferred.resolve(data)):(deferred.reject(),$rootScope.$broadcast(AUTH_EVENTS.loginFailed))}),deferred.promise},logout=function(){var deferred=$q.defer();return dataSource.logout().then(function(data){console.log("logout service",data),setLogged(!1),$rootScope.$broadcast(AUTH_EVENTS.logoutSuccess),deferred.resolve()},function(){deferred.reject()}),deferred.promise},register=function(registerData){var deferred=$q.defer();return dataSource.register(registerData).then(function(){deferred.resolve()},function(){deferred.reject()}),deferred.promise};return{loggIn:loggIn,getIsLogged:getIsLogged,logout:logout,register:register,init:init,getUserAuthData:getUserAuthData,authEvents:AUTH_EVENTS,setLogged:setLogged}}]),angular.module("utils.fastFilter",[]).factory("fastFilter",["$filter","$rootScope",function($filter){return{create:function(filtersChain,initialFilterObj){function getFirstDirtyFilter(filterObj){var dirtyFilters=[];for(var param in filterObj)filterObj.hasOwnProperty(param)&&!angular.equals(filterObj[param],oldFilterObj[param])&&dirtyFilters.push(paramsMapping[param]);return dirtyFilters.length?filtersOrdered[Math.min.apply(Math,dirtyFilters)]:null}function runFiltersFromChain(chain,input,filterObj){if(0==chain.length)return input;var filter=filters[chain[0]];return filter.cached=input,runFiltersFromChain(chain.slice(1),filter.run(input,filterObj),filterObj)}for(var filterDescs=filtersChain.replace(/\s+/g,"").split("|"),filters=[],filtersOrdered=[],paramsMapping=[],i=0;i<filterDescs.length;i++){var filterMeta=filterDescs[i].split(":"),filterName=filterMeta[0],filterParams=filterMeta.slice(1);filtersOrdered[i]=filterName,filters[filterName]={name:filterName,params:filterParams,run:function(input,filterObj){for(var paramValues=[input],paramNames=this.params,i=0;i<paramNames.length;i++)paramValues[i+1]=filterObj[paramNames[i]];return $filter(this.name).apply(this,paramValues)},cached:void 0,order:i};for(var p=0;p<filterParams.length;p++)paramsMapping[filterParams[p]]=i}var oldInput=void 0,oldFilterObj=initialFilterObj,lastResult=void 0;return{filter:function(input,filterObj){if(!input)return input;var filterName=filtersOrdered[0];if(oldFilterObj&&input==oldInput&&(filterName=getFirstDirtyFilter(filterObj),!filterName))return lastResult;if(oldInput!=input)for(var key in filters)delete filters[key].cached;oldInput=input,oldFilterObj=angular.copy(filterObj);var filtersToExecute=filtersOrdered.slice(filters[filterName].order);if(filtersToExecute.length>0){var firstFilter=filters[filtersToExecute[0]];return lastResult=runFiltersFromChain(filtersToExecute,void 0===firstFilter.cached?input:firstFilter.cached,filterObj)}return input},get:function(){return angular.copy(oldFilterObj)}}}}}]),angular.module("eventHeroes",["dataSource","ngEnter"]).controller("eventHeroesCtrl",["$scope","$rootScope","dataSource","$http",function(){}]),angular.module("heroes",["dataSource","ngEnter","controls.hcCreatureTile","rzModule","filters.creaturesFilter"]).controller("heroesCtrl",["$scope","$rootScope","dataSource","$http","creaturesFilter",function($scope,$rootScope,dataSource,$http,creaturesFilter){$scope.filteredCreatures={},$scope.filter=creaturesFilter.get(),$scope.creatures=$rootScope.model.creatures,$scope.creatureType={titan:!0,hero:!0},$scope.lvlRangeSlider={minValue:20,maxValue:320,options:{floor:20,ceil:320,step:1,onChange:function(){$scope.filter.lvlRange=$scope.lvlRangeSlider,$scope.filteredCreatures=creaturesFilter.filter($scope.creatures,$scope.filter)}}},$scope.timeSlider={value:24},$rootScope.$on("dataSource.ready",function(){$scope.creatures=$rootScope.model.creatures,$scope.filteredCreatures=$scope.creatures}),$scope.$watch("creatureType",function(creatureType){$scope.filter.creatureType=creatureType,$scope.filteredCreatures=creaturesFilter.filter($scope.creatures,$scope.filter)},!0),$scope.$watch("queryInput",function(queryInput){$scope.filter.queryInput=queryInput,(null!=$scope.filter.queryInput||void 0!=$scope.filter.queryInput)&&($scope.filteredCreatures=creaturesFilter.filter($scope.creatures,$scope.filter))}),$scope.$watch("onlyWithKnownTime",function(onlyWithKnownTime){$scope.filter.onlyWithKnownTime=onlyWithKnownTime,$scope.filteredCreatures=creaturesFilter.filter($scope.creatures,$scope.filter)})}]),angular.module("hideMenu",[]).directive("hideMenu",function(){return{scope:{opened:"=hideMenu"},link:function($scope,element){element.bind("click",function(){event.pageX>99&&$scope.$apply(function(){$scope.opened=!1})})}}}),angular.module("login",["dataSource","ngEnter","userAuthService"]).controller("loginCtrl",["$scope","$rootScope","dataSource","$http","userAuthService","appStates","$state",function($scope,$rootScope,dataSource,$http,userAuthService,appStates,$state){$rootScope.showLogout=!1,$scope.logg=function(login,password){userAuthService.loggIn(login,password).then(function(){$rootScope.states=appStates[!0],userAuthService.setLogged(!0),$state.go($rootScope.states[0].reference)})}}]),angular.module("register",["dataSource","ngEnter"]).controller("registerCtrl",["$scope","$rootScope","dataSource","$http","userAuthService","$state",function($scope,$rootScope,dataSource,$http,userAuthService,$state){$scope.register=function(registerData){userAuthService.register(registerData).then(function(){$state.go("login")}).then(null,function(){$scope.registerMessage="REGISTER FAILED, YOU CAN NOW LOGIN"})}}]),angular.module("router",[]).provider("routes",function(){{var routes=[{title:"LOGIN",path:"/",icon:"icon-circle",selected:!0},{title:"REGISTER",path:"/register",icon:"icon-circle",selected:!1},{title:"HEROES",path:"/heroes",icon:"icon-circle",selected:!1},{title:"TITANS",path:"/titans",icon:"icon-circle",selected:!1},{title:"EVENT HEROES",path:"/event-heroes",icon:"icon-circle",selected:!1},{title:"EVENT TITANS",path:"/event-titans",icon:"icon-circle",selected:!1}];routes[0]}this.$get=function(){return{register:function($routeProvider){for(var routeProvider=$routeProvider,i=0;i<routes.length;i++)routeProvider=routeProvider.when(routes[i].path,{idx:i});routeProvider.otherwise({redirectTo:"/"})},select:function(route){for(var i=0;i<routes.length;i++)routes[i].selected=!1;route.selected=!0},getList:function(){return routes},getLoginList:function(){var loginRoutes=[routes[0],routes[1]];return loginRoutes},getAfterLoginList:function(){return[{title:"HEROES",path:"/heroes",icon:"icon-circle",selected:!1},{title:"TITANS",path:"/titans",icon:"icon-circle",selected:!1},{title:"EVENT HEROES",path:"/event-heroes",icon:"icon-circle",selected:!1},{title:"EVENT TITANS",path:"/event-titans",icon:"icon-circle",selected:!1}]}}}}).config(["$routeProvider","$locationProvider","routesProvider",function($routeProvider,$locationProvider,routesProvider){routesProvider.$get().register($routeProvider),$locationProvider.html5Mode(!0)}]).directive("router",["routes","$location","dataSource","userAuthService",function(routes,$location){return{restrict:"A",controller:["$scope","$attrs",function($scope,$attrs){var routesList=($scope[$attrs.router]||{},routes.getList());$scope.$on("$routeChangeSuccess",function(evt,routeData){routeData.$$route&&($scope[$attrs.router]=routesList[routeData.$$route.idx],routes.select($scope[$attrs.router]))}),this.setRoute=function(route){$scope[$attrs.router]=route,routes.select(route),$location.path(route.path)}}]}}]).directive("routeTo",function(){return{restrict:"A",require:"^router",scope:{item:"=routeTo",initCombo:"@"},link:function($scope,$element,$attrs,routerCtrl){var evt="ontouchstart"in document.documentElement?"touchstart":"mousedown";$element.bind(evt,function(){routerCtrl.setRoute($scope.item),$scope.$apply()})}}}),angular.module("settings",["dataSource"]).controller("settingsCtrl",["$scope","$rootScope","dataSource",function($scope,$rootScope){$scope.model=$rootScope.model}]),angular.module("eventTitans",["dataSource","ngEnter"]).controller("eventTitansCtrl",["$scope","$rootScope","dataSource","$http",function(){}]),angular.module("titans",["dataSource","ngEnter"]).controller("titansCtrl",["$scope","$rootScope","dataSource","$http",function($scope,$rootScope){$scope.model=$rootScope.model}]);